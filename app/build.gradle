plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.symaxd.qrcode.aquier"
        minSdk 26
        targetSdk 32
        versionCode 2
        versionName "1.0.0 EAP"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "listener", "leakcanary.FailTestOnLeakRunListener"
    }

    testOptions {
        unitTests.returnDefaultValues true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    def env_flavor = "enviroment"
    flavorDimensions "$env_flavor"
    productFlavors {
        def APP_NAME = "app_name"
        def ALLOW_TEST_FEATURES = "ALLOW_TEST_FEATURES"

        production {
            dimension env_flavor
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            resValue "string", APP_NAME, "QR code Translator"
            buildConfigField "boolean", ALLOW_TEST_FEATURES, "false"

        }
        preProduction {
            dimension env_flavor
            resValue "string", APP_NAME, "QR code Translator BETA"
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            applicationIdSuffix ".beta"
            buildConfigField "boolean", ALLOW_TEST_FEATURES, "false"

        }
        qa {
            resValue "string", APP_NAME, "QR code Translator QA"
            dimension env_flavor
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
            applicationIdSuffix ".qa"
            buildConfigField "boolean", ALLOW_TEST_FEATURES, "true"
        }

        development {
            resValue "string", APP_NAME, "QR code Translator DEV"
            dimension env_flavor
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
            applicationIdSuffix ".dev"
            buildConfigField "boolean", ALLOW_TEST_FEATURES, "true"

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation("androidx.multidex:multidex:$multidex_version")
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.1'
    implementation 'com.github.AppIntro:AppIntro:6.2.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.10"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha04"
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.12'
    implementation 'com.google.firebase:firebase-analytics:21.1.0'
    implementation 'com.google.firebase:firebase-config-ktx:21.1.1'
    implementation 'org.mockito:mockito-core:4.7.0'
    implementation 'androidx.test:core:1.5.0-alpha02'
    implementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    //noinspection GradleDynamicVersion
    implementation 'junit:junit:4.+'
    implementation 'androidx.test.espresso:espresso-core:3.4.0'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryDevelopmentVersion"
//    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryDevelopmentVersion"
    /**QR Code Generator*/
//    implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.3'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    kapt 'androidx.room:room-compiler:2.5.0-alpha02'
    implementation 'androidx.room:room-ktx:2.5.0-alpha02'
    implementation 'androidx.room:room-runtime:2.5.0-alpha02'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.10'
    kapt 'com.google.dagger:dagger-compiler:2.43.2'
    implementation 'com.google.dagger:dagger:2.43.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha01'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha01'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.0-alpha01'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    implementation 'com.google.dagger:hilt-android:2.43.2'
    kapt 'com.google.dagger:hilt-android-compiler:2.43.2'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.10'
}